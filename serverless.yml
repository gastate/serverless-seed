service: serverlessSeed${file(versioning.jenkins.js):version} #the ${} is used by jenkins to up version in pr

provider:
  name: aws
  runtime: nodejs4.3
  # role: ${file(deploy.env.yml):IAM_ROLE}  # Use this to specify a pre-defined deployment role
  environment:
    IS_SERVERLESS: ${file(deploy.env.yml):IS_SERVERLESS}
    LIFECYCLE: ${file(deploy.env.yml):LIFECYCLE}
  memorySize: 512 # optional, default is 1024.  Tune this down as needed, lower memory is cheaper
  timeout: 15 # default is 6, may need longer from Banner Queries
  stage: dev
#  vpc: # This configuratino allows Lambda to talk to GSU, and is configured by account.  It can also be specified at the Function level
#    securityGroupIds:
#      - ${file(deploy.env.yml):VPC_SECURITY_GROUP}
#    subnetIds:
#      - ${file(deploy.env.yml):VPC_AZ_1}
#      - ${file(deploy.env.yml):VPC_AZ_2}
#      - ${file(deploy.env.yml):VPC_AZ_3}
#      - ${file(deploy.env.yml):VPC_AZ_4}

package:
  exclude:
    - tests/**
    - .git/**
    - coverage/**
    - .sonar/**
    - src/**
    - node_modules/@types/**
    - testresults
    - build/**/*.js.map
    - build/test/**
    - sonar-project.properties
    - versioning.js
    - tsconfig.json
    - .env

functions:
  helloWorld:
    environment:
      MY_ENV_VARIABLE: ${file(deploy.env.yml):MY_ENV_VARIABLE}
    handler: build/src/functions/helloWorld/handler.helloWorld
    events:
      - http:
          path: /
          method: GET
      - http:
          path: /
          method: POST
plugins:
  - serverless-offline
