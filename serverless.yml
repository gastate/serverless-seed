service: docUploadOrds${file(versioning.jenkins.js):version} #the ${} is used by jenkins to up version in pr

provider:
  name: aws
  runtime: nodejs4.3
  environment:
    IS_SERVERLESS: ${file(deploy.env.yml):IS_SERVERLESS}
    LIFECYCLE: ${file(deploy.env.yml):LIFECYCLE}

package:
  exclude:
    - tests/**
    - .git/**
    - coverage/**
    - .sonar/**
    - src/**
    - node_modules/@types/**
    - testresults
    - build/**/*.js.map
    - build/test/**
    - sonar-project.properties
    - versioning.js
    - tsconfig.json
    - .env

functions:
  helloWorld:
    environment:
      MY_ENV_VARIABLE: ${file(deploy.env.yml):MY_ENV_VARIABLE}
    handler: build/src/functions/helloWorld/handler.helloWorld
    events:
      - http:
          path: /
          method: GET
      - http:
          path: /
          method: POST
  helloUni:
    environment:
      MY_ENV_VARIABLE: ${file(deploy.env.yml):MY_ENV_VARIABLE}
    handler: build/src/functions/helloUniverse/handler.helloUni
    events:
      - http:
          path: /uni
          method: GET
          cors: true
      - http:
          path: /uni
          method: POST
          cors: true
  docOrds:
    environment:
      MY_ENV_VARIABLE: ${file(deploy.env.yml):MY_ENV_VARIABLE}
    handler: build/src/functions/docOrds/handler.retrieveBannerData
    events:
      - http:
          path: /semesters
          method: GET
          cors: true
      - http:
          path: /semesters
          method: POST
          cors: true
plugins:
  - serverless-offline
